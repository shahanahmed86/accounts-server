// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

model Admin {
  id        String   @id @default(uuid())
  username  String   @unique
  password  String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model User {
  id          String   @id @default(uuid())
  username    String   @unique
  password    String
  firstName   String
  lastName    String
  email       String   @unique
  cell        String   @unique
  avatar      String?
  isVerified  Boolean  @default(false)
  socials     Social[]
  heads       Head[]
  entries     Entry[]
  isSuspended Boolean  @default(false)
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}

model Social {
  id           String   @id @default(uuid())
  firebase_uid String
  avatar       String
  provider     String
  payload      String
  user         User     @relation(fields: [userId], references: [id])
  userId       String
  createdAt    DateTime @default(now())
  updatedAt    DateTime @updatedAt
}

model Head {
  id             String   @id @default(uuid())
  label          String
  nature         Nature
  parent         Head?    @relation(name: "ParentToChildren", fields: [parentId], references: [id])
  parentId       String?
  children       Head[]   @relation(name: "ParentToChildren")
  user           User     @relation(fields: [userId], references: [id])
  userId         String
  entries        Entry[]
  isTransactable Boolean  @default(false)
  isSuspended    Boolean  @default(false)
  createdAt      DateTime @default(now())
  updatedAt      DateTime @updatedAt
}

enum Nature {
  ASSET
  EXPENSE
  LIABILITY
  EQUITY
  REVENUE
}

model Entry {
  id          String    @id @default(uuid())
  type        EntryType
  amount      Float
  description String
  head        Head      @relation(fields: [headId], references: [id])
  headId      String
  user        User      @relation(fields: [userId], references: [id])
  userId      String
  isSuspended Boolean   @default(false)
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
}

enum EntryType {
  DEBIT
  CREDIT
}
